//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v1.0.2-b15-fcs 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2004.03.04 at 02:32:08 MST 
//


package org.megatome.frame2.jaxbgen.impl;

public class USAddressImpl
    extends org.megatome.frame2.jaxb.JaxbEventBase
    implements org.megatome.frame2.jaxbgen.USAddress, java.io.Serializable, com.sun.xml.bind.JAXBObject, org.megatome.frame2.jaxbgen.impl.runtime.UnmarshallableObject, org.megatome.frame2.jaxbgen.impl.runtime.XMLSerializable, org.megatome.frame2.jaxbgen.impl.runtime.ValidatableObject
{

    private final static long serialVersionUID = 1L;
    protected java.lang.String _State;
    protected java.math.BigDecimal _Zip;
    protected java.lang.String _Country;
    protected java.lang.String _City;
    protected java.lang.String _Street;
    protected java.lang.String _Name;
    public final static java.lang.Class version = (org.megatome.frame2.jaxbgen.impl.JAXBVersion.class);
    private static com.sun.msv.grammar.Grammar schemaFragment;

    private final static java.lang.Class PRIMARY_INTERFACE_CLASS() {
        return (org.megatome.frame2.jaxbgen.USAddress.class);
    }

    public java.lang.String getState() {
        return _State;
    }

    public void setState(java.lang.String value) {
        _State = value;
    }

    public java.math.BigDecimal getZip() {
        return _Zip;
    }

    public void setZip(java.math.BigDecimal value) {
        _Zip = value;
    }

    public java.lang.String getCountry() {
        return _Country;
    }

    public void setCountry(java.lang.String value) {
        _Country = value;
    }

    public java.lang.String getCity() {
        return _City;
    }

    public void setCity(java.lang.String value) {
        _City = value;
    }

    public java.lang.String getStreet() {
        return _Street;
    }

    public void setStreet(java.lang.String value) {
        _Street = value;
    }

    public java.lang.String getName() {
        return _Name;
    }

    public void setName(java.lang.String value) {
        _Name = value;
    }

    public org.megatome.frame2.jaxbgen.impl.runtime.UnmarshallingEventHandler createUnmarshaller(org.megatome.frame2.jaxbgen.impl.runtime.UnmarshallingContext context) {
        return new org.megatome.frame2.jaxbgen.impl.USAddressImpl.Unmarshaller(context);
    }

    public void serializeBody(org.megatome.frame2.jaxbgen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        context.startElement("", "name");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(((java.lang.String) _Name), "Name");
        } catch (java.lang.Exception e) {
            org.megatome.frame2.jaxbgen.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        context.startElement("", "street");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(((java.lang.String) _Street), "Street");
        } catch (java.lang.Exception e) {
            org.megatome.frame2.jaxbgen.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        context.startElement("", "city");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(((java.lang.String) _City), "City");
        } catch (java.lang.Exception e) {
            org.megatome.frame2.jaxbgen.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        context.startElement("", "state");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(((java.lang.String) _State), "State");
        } catch (java.lang.Exception e) {
            org.megatome.frame2.jaxbgen.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
        context.startElement("", "zip");
        context.endNamespaceDecls();
        context.endAttributes();
        try {
            context.text(javax.xml.bind.DatatypeConverter.printDecimal(((java.math.BigDecimal) _Zip)), "Zip");
        } catch (java.lang.Exception e) {
            org.megatome.frame2.jaxbgen.impl.runtime.Util.handlePrintConversionException(this, e, context);
        }
        context.endElement();
    }

    public void serializeAttributes(org.megatome.frame2.jaxbgen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
        if (_Country!= null) {
            context.startAttribute("", "country");
            try {
                context.text(((java.lang.String) _Country), "Country");
            } catch (java.lang.Exception e) {
                org.megatome.frame2.jaxbgen.impl.runtime.Util.handlePrintConversionException(this, e, context);
            }
            context.endAttribute();
        }
    }

    public void serializeURIs(org.megatome.frame2.jaxbgen.impl.runtime.XMLSerializer context)
        throws org.xml.sax.SAXException
    {
    }

    public java.lang.Class getPrimaryInterface() {
        return (org.megatome.frame2.jaxbgen.USAddress.class);
    }

    public com.sun.msv.verifier.DocumentDeclaration createRawValidator() {
        if (schemaFragment == null) {
            schemaFragment = com.sun.xml.bind.validator.SchemaDeserializer.deserialize((
 "\u00ac\u00ed\u0000\u0005sr\u0000\u001fcom.sun.msv.grammar.SequenceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\u001dcom.su"
+"n.msv.grammar.BinaryExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0004exp1t\u0000 Lcom/sun/msv/gra"
+"mmar/Expression;L\u0000\u0004exp2q\u0000~\u0000\u0002xr\u0000\u001ecom.sun.msv.grammar.Expressi"
+"on\u00f8\u0018\u0082\u00e8N5~O\u0002\u0000\u0003I\u0000\u000ecachedHashCodeL\u0000\u0013epsilonReducibilityt\u0000\u0013Ljava"
+"/lang/Boolean;L\u0000\u000bexpandedExpq\u0000~\u0000\u0002xp\u000b\u0005\u0017\u00e4ppsq\u0000~\u0000\u0000\t\'X\u00bfppsq\u0000~\u0000\u0000\u0005"
+"\u00e2\u00c6\u00b0ppsq\u0000~\u0000\u0000\u0004\u00fe\u00f7\u0015ppsq\u0000~\u0000\u0000\u0003bb\u00f0ppsr\u0000\'com.sun.msv.grammar.trex.El"
+"ementPattern\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\tnameClasst\u0000\u001fLcom/sun/msv/grammar/N"
+"ameClass;xr\u0000\u001ecom.sun.msv.grammar.ElementExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002Z\u0000\u001aign"
+"oreUndeclaredAttributesL\u0000\fcontentModelq\u0000~\u0000\u0002xq\u0000~\u0000\u0003\u0000\u00e4\u00e2\u00fcpp\u0000sq\u0000~"
+"\u0000\u0000\u0000\u00e4\u00e2\u00f1ppsr\u0000\u001bcom.sun.msv.grammar.DataExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtt\u0000\u001fLo"
+"rg/relaxng/datatype/Datatype;L\u0000\u0006exceptq\u0000~\u0000\u0002L\u0000\u0004namet\u0000\u001dLcom/su"
+"n/msv/util/StringPair;xq\u0000~\u0000\u0003\u00002W\u00c8ppsr\u0000#com.sun.msv.datatype.x"
+"sd.StringType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001Z\u0000\risAlwaysValidxr\u0000*com.sun.msv.data"
+"type.xsd.BuiltinAtomicType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000%com.sun.msv.datatyp"
+"e.xsd.ConcreteType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\'com.sun.msv.datatype.xsd.XS"
+"DatatypeImpl\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\fnamespaceUrit\u0000\u0012Ljava/lang/String;L"
+"\u0000\btypeNameq\u0000~\u0000\u0017L\u0000\nwhiteSpacet\u0000.Lcom/sun/msv/datatype/xsd/Whi"
+"teSpaceProcessor;xpt\u0000 http://www.w3.org/2001/XMLSchemat\u0000\u0006str"
+"ingsr\u00005com.sun.msv.datatype.xsd.WhiteSpaceProcessor$Preserve"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000,com.sun.msv.datatype.xsd.WhiteSpaceProcessor\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xp\u0001sr\u00000com.sun.msv.grammar.Expression$NullSetExpre"
+"ssion\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\nppsr\u0000\u001bcom.sun.msv.util.StringPair\u00d0"
+"t\u001ejB\u008f\u008d\u00a0\u0002\u0000\u0002L\u0000\tlocalNameq\u0000~\u0000\u0017L\u0000\fnamespaceURIq\u0000~\u0000\u0017xpq\u0000~\u0000\u001bq\u0000~\u0000\u001as"
+"r\u0000\u001dcom.sun.msv.grammar.ChoiceExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0001\u0000\u00b2\u008b$ppsr\u0000 c"
+"om.sun.msv.grammar.AttributeExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\u0003expq\u0000~\u0000\u0002L\u0000\tname"
+"Classq\u0000~\u0000\u000bxq\u0000~\u0000\u0003\u0000\u00b2\u008b\u0019sr\u0000\u0011java.lang.Boolean\u00cd r\u0080\u00d5\u009c\u00fa\u00ee\u0002\u0000\u0001Z\u0000\u0005value"
+"xp\u0000psq\u0000~\u0000\u000f\u0000\u0097\u00ed\u00fdppsr\u0000\"com.sun.msv.datatype.xsd.QnameType\u0000\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0014q\u0000~\u0000\u001at\u0000\u0005QNamesr\u00005com.sun.msv.datatype.xsd.WhiteSp"
+"aceProcessor$Collapse\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u001dq\u0000~\u0000 sq\u0000~\u0000!q\u0000~\u0000,q\u0000~\u0000\u001as"
+"r\u0000#com.sun.msv.grammar.SimpleNameClass\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0002L\u0000\tlocalNam"
+"eq\u0000~\u0000\u0017L\u0000\fnamespaceURIq\u0000~\u0000\u0017xr\u0000\u001dcom.sun.msv.grammar.NameClass\u0000"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xpt\u0000\u0004typet\u0000)http://www.w3.org/2001/XMLSchema-insta"
+"ncesr\u00000com.sun.msv.grammar.Expression$EpsilonExpression\u0000\u0000\u0000\u0000\u0000"
+"\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0003\u0000\u0000\u0000\tsq\u0000~\u0000\'\u0001psq\u0000~\u00000t\u0000\u0004namet\u0000\u0000sq\u0000~\u0000\n\u0002}\u007f\u00efpp\u0000sq\u0000~\u0000\u0000\u0002"
+"}\u007f\u00e4ppq\u0000~\u0000\u0012sq\u0000~\u0000#\u0002K(\u0017ppsq\u0000~\u0000%\u0002K(\fq\u0000~\u0000(pq\u0000~\u0000)sq\u0000~\u00000q\u0000~\u00003q\u0000~\u00004q"
+"\u0000~\u00006sq\u0000~\u00000t\u0000\u0006streetq\u0000~\u0000:sq\u0000~\u0000\n\u0001\u009c\u0094 pp\u0000sq\u0000~\u0000\u0000\u0001\u009c\u0094\u0015ppq\u0000~\u0000\u0012sq\u0000~\u0000#"
+"\u0001j<Hppsq\u0000~\u0000%\u0001j<=q\u0000~\u0000(pq\u0000~\u0000)sq\u0000~\u00000q\u0000~\u00003q\u0000~\u00004q\u0000~\u00006sq\u0000~\u00000t\u0000\u0004cit"
+"yq\u0000~\u0000:sq\u0000~\u0000\n\u0000\u00e3\u00cf\u0096pp\u0000sq\u0000~\u0000\u0000\u0000\u00e3\u00cf\u008bppq\u0000~\u0000\u0012sq\u0000~\u0000#\u0000\u00b1w\u00beppsq\u0000~\u0000%\u0000\u00b1w\u00b3q\u0000"
+"~\u0000(pq\u0000~\u0000)sq\u0000~\u00000q\u0000~\u00003q\u0000~\u00004q\u0000~\u00006sq\u0000~\u00000t\u0000\u0005stateq\u0000~\u0000:sq\u0000~\u0000\n\u0003D\u0092\np"
+"p\u0000sq\u0000~\u0000\u0000\u0003D\u0091\u00ffppsq\u0000~\u0000\u000f\u0001z\u0017wppsr\u0000#com.sun.msv.datatype.xsd.Numbe"
+"rType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0014q\u0000~\u0000\u001at\u0000\u0007decimalq\u0000~\u0000.q\u0000~\u0000 sq\u0000~\u0000!q\u0000~\u0000Uq\u0000"
+"~\u0000\u001asq\u0000~\u0000#\u0001\u00caz\u0083ppsq\u0000~\u0000%\u0001\u00cazxq\u0000~\u0000(pq\u0000~\u0000)sq\u0000~\u00000q\u0000~\u00003q\u0000~\u00004q\u0000~\u00006sq\u0000"
+"~\u00000t\u0000\u0003zipq\u0000~\u0000:sq\u0000~\u0000#\u0001\u00dd\u00bf ppsq\u0000~\u0000%\u0001\u00dd\u00bf\u0015q\u0000~\u0000(psr\u0000\u001ccom.sun.msv.gr"
+"ammar.ValueExp\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0003L\u0000\u0002dtq\u0000~\u0000\u0010L\u0000\u0004nameq\u0000~\u0000\u0011L\u0000\u0005valuet\u0000\u0012Lj"
+"ava/lang/Object;xq\u0000~\u0000\u0003\u0000\n=Bppsr\u0000$com.sun.msv.datatype.xsd.Nmt"
+"okenType\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xr\u0000\"com.sun.msv.datatype.xsd.TokenType\u0000\u0000\u0000"
+"\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0000xq\u0000~\u0000\u0013q\u0000~\u0000\u001at\u0000\u0007NMTOKENq\u0000~\u0000.\u0000sq\u0000~\u0000!q\u0000~\u0000dq\u0000~\u0000\u001at\u0000\u0002USsq\u0000~"
+"\u00000t\u0000\u0007countryq\u0000~\u0000:q\u0000~\u00006sr\u0000\"com.sun.msv.grammar.ExpressionPool"
+"\u0000\u0000\u0000\u0000\u0000\u0000\u0000\u0001\u0002\u0000\u0001L\u0000\bexpTablet\u0000/Lcom/sun/msv/grammar/ExpressionPool"
+"$ClosedHash;xpsr\u0000-com.sun.msv.grammar.ExpressionPool$ClosedH"
+"ash\u00d7j\u00d0N\u00ef\u00e8\u00ed\u001c\u0002\u0000\u0004I\u0000\u0005countI\u0000\tthresholdL\u0000\u0006parentq\u0000~\u0000j[\u0000\u0005tablet\u0000!["
+"Lcom/sun/msv/grammar/Expression;xp\u0000\u0000\u0000\u0010\u0000\u0000\u00009pur\u0000![Lcom.sun.msv"
+".grammar.Expression;\u00d68D\u00c3]\u00ad\u00a7\n\u0002\u0000\u0000xp\u0000\u0000\u0000\u00bfppppppppppppq\u0000~\u0000\bppppq\u0000"
+"~\u0000Cq\u0000~\u0000\u0006ppppq\u0000~\u0000<ppppppppppppppppppppppppppppppppppppppppppp"
+"q\u0000~\u0000Qq\u0000~\u0000Wpppppq\u0000~\u0000Dpppppq\u0000~\u0000=ppppppppppppppppq\u0000~\u0000Jppppppppp"
+"pppppppppq\u0000~\u0000\\pppq\u0000~\u0000\u000eppppq\u0000~\u0000\u0007ppppppppppppq\u0000~\u0000\u0005pppppppppppp"
+"pppq\u0000~\u0000Kpppppppppppppppq\u0000~\u0000\tppppppq\u0000~\u0000$ppppppppppppp"));
        }
        return new com.sun.msv.verifier.regexp.REDocumentDeclaration(schemaFragment);
    }

    public class Unmarshaller
        extends org.megatome.frame2.jaxbgen.impl.runtime.AbstractUnmarshallingEventHandlerImpl
    {


        public Unmarshaller(org.megatome.frame2.jaxbgen.impl.runtime.UnmarshallingContext context) {
            super(context, "-------------------");
        }

        protected Unmarshaller(org.megatome.frame2.jaxbgen.impl.runtime.UnmarshallingContext context, int startState) {
            this(context);
            state = startState;
        }

        public java.lang.Object owner() {
            return org.megatome.frame2.jaxbgen.impl.USAddressImpl.this;
        }

        public void enterElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname, org.xml.sax.Attributes __atts)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  3 :
                        if (("name" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 4;
                            return ;
                        }
                        break;
                    case  18 :
                        revertToParentFromEnterElement(___uri, ___local, ___qname, __atts);
                        return ;
                    case  9 :
                        if (("city" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 10;
                            return ;
                        }
                        break;
                    case  12 :
                        if (("state" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 13;
                            return ;
                        }
                        break;
                    case  0 :
                        attIdx = context.getAttribute("", "country");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 3;
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  15 :
                        if (("zip" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 16;
                            return ;
                        }
                        break;
                    case  6 :
                        if (("street" == ___local)&&("" == ___uri)) {
                            context.pushAttributes(__atts, true);
                            state = 7;
                            return ;
                        }
                        break;
                }
                super.enterElement(___uri, ___local, ___qname, __atts);
                break;
            }
        }

        private void eatText1(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Country = com.sun.xml.bind.WhiteSpaceProcessor.collapse(value);
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        public void leaveElement(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  5 :
                        if (("name" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 6;
                            return ;
                        }
                        break;
                    case  18 :
                        revertToParentFromLeaveElement(___uri, ___local, ___qname);
                        return ;
                    case  8 :
                        if (("street" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 9;
                            return ;
                        }
                        break;
                    case  0 :
                        attIdx = context.getAttribute("", "country");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 3;
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                    case  14 :
                        if (("state" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 15;
                            return ;
                        }
                        break;
                    case  11 :
                        if (("city" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 12;
                            return ;
                        }
                        break;
                    case  17 :
                        if (("zip" == ___local)&&("" == ___uri)) {
                            context.popAttributes();
                            state = 18;
                            return ;
                        }
                        break;
                }
                super.leaveElement(___uri, ___local, ___qname);
                break;
            }
        }

        public void enterAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  18 :
                        revertToParentFromEnterAttribute(___uri, ___local, ___qname);
                        return ;
                    case  0 :
                        if (("country" == ___local)&&("" == ___uri)) {
                            state = 1;
                            return ;
                        }
                        state = 3;
                        continue outer;
                }
                super.enterAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void leaveAttribute(java.lang.String ___uri, java.lang.String ___local, java.lang.String ___qname)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                switch (state) {
                    case  18 :
                        revertToParentFromLeaveAttribute(___uri, ___local, ___qname);
                        return ;
                    case  2 :
                        if (("country" == ___local)&&("" == ___uri)) {
                            state = 3;
                            return ;
                        }
                        break;
                    case  0 :
                        attIdx = context.getAttribute("", "country");
                        if (attIdx >= 0) {
                            final java.lang.String v = context.eatAttribute(attIdx);
                            eatText1(v);
                            state = 3;
                            continue outer;
                        }
                        state = 3;
                        continue outer;
                }
                super.leaveAttribute(___uri, ___local, ___qname);
                break;
            }
        }

        public void handleText(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            int attIdx;
            outer:
            while (true) {
                try {
                    switch (state) {
                        case  7 :
                            eatText2(value);
                            state = 8;
                            return ;
                        case  13 :
                            eatText3(value);
                            state = 14;
                            return ;
                        case  10 :
                            eatText4(value);
                            state = 11;
                            return ;
                        case  16 :
                            eatText5(value);
                            state = 17;
                            return ;
                        case  18 :
                            revertToParentFromText(value);
                            return ;
                        case  0 :
                            attIdx = context.getAttribute("", "country");
                            if (attIdx >= 0) {
                                final java.lang.String v = context.eatAttribute(attIdx);
                                eatText1(v);
                                state = 3;
                                continue outer;
                            }
                            state = 3;
                            continue outer;
                        case  1 :
                            eatText1(value);
                            state = 2;
                            return ;
                        case  4 :
                            eatText6(value);
                            state = 5;
                            return ;
                    }
                } catch (java.lang.RuntimeException e) {
                    handleUnexpectedTextException(value, e);
                }
                break;
            }
        }

        private void eatText2(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Street = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText3(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _State = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText4(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _City = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText5(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Zip = javax.xml.bind.DatatypeConverter.parseDecimal(com.sun.xml.bind.WhiteSpaceProcessor.collapse(value));
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

        private void eatText6(final java.lang.String value)
            throws org.xml.sax.SAXException
        {
            try {
                _Name = value;
            } catch (java.lang.Exception e) {
                handleParseConversionException(e);
            }
        }

    }

}
